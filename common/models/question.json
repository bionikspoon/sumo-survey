{
  "name": "Question",
  "base": "PersistedModel",
  "idInjection": true,
  "options": {
    "validateUpsert": true
  },
  "mixins": {
    "Timestamp": {}
  },
  "properties": {
    "text": {
      "type": "string",
      "required": true
    }
  },
  "validations": [],
  "relations": {
    "creator": {
      "type": "belongsTo",
      "model": "Admin",
      "foreignKey": "creatorId"
    },
    "choices": {
      "type": "hasMany",
      "model": "Choice",
      "foreignKey": "questionId"
    },
    "responses": {
      "type": "hasMany",
      "model": "Response",
      "foreignKey": "questionId"
    },
    "guests": {
      "type": "hasMany",
      "model": "Guest",
      "foreignKey": "",
      "through": "Response"
    }
  },
  "acls": [
    {
      "accessType": "*",
      "principalType": "ROLE",
      "principalId": "$everyone",
      "permission": "DENY"
    },
    {
      "accessType": "READ",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "createWithChoices"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "statsSummary"
    },
    {
      "accessType": "EXECUTE",
      "principalType": "ROLE",
      "principalId": "$authenticated",
      "permission": "ALLOW",
      "property": "statsQuestion"
    }
  ],
  "methods": {
    "createWithChoices": {
      "isStatic": true,
      "accepts": [
        {
          "arg": "data",
          "type": "Question",
          "required": true,
          "description": "Model instance data",
          "http": {
            "source": "body"
          }
        }
      ],
      "returns": [
        {
          "arg": "question",
          "type": "Question",
          "root": true,
          "description": "Question model"
        }
      ],
      "description": "Create a new Question model with Choices and persist it into the data source.",
      "http": [
        {
          "path": "/",
          "verb": "post"
        }
      ]
    },
    "statsSummary": {
      "isStatic": true,
      "accepts": [
        {
          "arg": "filter",
          "type": "object",
          "required": false,
          "description": "Filter defining fields, where, include, order, offset, and limit",
          "http": {
            "source": "query"
          }
        }
      ],
      "returns": [
        {
          "arg": "data",
          "type": "array",
          "root": true,
          "description": "Questions including response count"
        }
      ],
      "description": "Get response count by question",
      "http": [
        {
          "path": "/stats",
          "verb": "get"
        }
      ]
    },
    "statsQuestion": {
      "isStatic": false,
      "accepts": [
        {
          "arg": "filter",
          "type": "object",
          "required": false,
          "description": "Filter defining fields, where, include, order, offset, and limit",
          "http": {
            "source": "query"
          }
        }
      ],
      "returns": [
        {
          "arg": "data",
          "type": "Question",
          "root": true,
          "description": "Question with response count by choice"
        }
      ],
      "description": "Get response count by choice",
      "http": [
        {
          "path": "/stats",
          "verb": "get"
        }
      ]
    }
  }
}
